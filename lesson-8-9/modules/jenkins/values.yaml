controller:
  image:
    registry: docker.io
    repository: jenkins/jenkins
    tag: "2.452.1-jdk17"
    pullPolicy: Always

  admin:
    username: admin
    password: admin123

  serviceType: LoadBalancer
  servicePort: 8080
  targetPort: 8080

  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "512Mi"

  persistentVolume:
    enabled: true
    storageClass: ebs-sc
    size: 10Gi

  installPlugins:
    - kubernetes:latest
    - workflow-aggregator:latest
    - git:latest
    - configuration-as-code:latest
    - credentials-binding:latest
    - github:latest
    - docker-plugin:latest
    - docker-workflow:latest
    - job-dsl:latest

  serviceAccount:
    name: jenkins-sa
    create: false

  env:
    - name: GITHUB_USERNAME
      valueFrom:
        secretKeyRef:
          name: github-token-secret
          key: username
    - name: GITHUB_TOKEN
      valueFrom:
        secretKeyRef:
          name: github-token-secret
          key: password

  javaOpts: "-Dcasc.reload.token=RANDOM -Djenkins.install.runSetupWizard=false"

  JCasC:
    security:
      secrets: true
    defaultConfig: false
    configScripts:
      credentials: |
        credentials:
          system:
            domainCredentials:
              - credentials:
                  - usernamePassword:
                      scope: GLOBAL
                      id: github-token
                      username: ${GITHUB_USERNAME}
                      password: ${GITHUB_TOKEN}
                      description: GitHub PAT
      clouds: |
        jenkins:
          clouds:
            - kubernetes:
                name: "kubernetes"
                namespace: "jenkins"
                serverUrl: "https://kubernetes.default.svc"
                jenkinsUrl: "http://jenkins:8080"
                jenkinsTunnel: "jenkins-agent:50000"
                containerCapStr: "10"
                retentionTimeout: 5
      seed-job: |
        jobs:
          - script: >
              job('seed-job') {
                description('Initial pipeline setup job')
                scm {
                  git {
                    remote {
                      url('https://github.com/Art-of-D/ci-cd.git')
                      credentials('github-token')
                    }
                    branches('*/main')
                  }
                }
                steps {
                  dsl {
                    text('''
                      pipelineJob("django-pipeline") {
                        definition {
                          cpsScm {
                            scm {
                              git {
                                remote {
                                  url("https://github.com/Art-of-D/ci-cd.git")
                                  credentials("github-token")
                                }
                                branches("*/main")
                              }
                            }
                          }
                        }
                        triggers {
                          githubPush()
                        }
                      }
                    ''')
                  }
                }
              }
